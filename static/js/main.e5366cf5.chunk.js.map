{"version":3,"sources":["components/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["Blog","JSON","stringify","this","props","blog","id","post","Component","App","state","blogs","componentDidMount","a","fetch","response","json","JSONresp","console","log","setState","createBlogs","map","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAeeA,E,4JAZb,WACA,OACE,gCACE,sCACA,6BAAKC,KAAKC,UAAUC,KAAKC,MAAMC,QAC/B,6BAAKF,KAAKC,MAAMC,KAAKC,KACrB,6BAAKH,KAAKC,MAAMC,KAAKE,c,GAPRC,aC+BJC,G,kNA3BbC,MAAQ,CACNC,MAAO,I,EAGTC,kB,sBAAoB,8BAAAC,EAAA,sEACGC,MAAM,yDADT,cACdC,EADc,gBAEGA,EAASC,OAFZ,OAEdC,EAFc,OAGlBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZT,MAAOM,IALS,2C,EASpBI,YAAc,WACZ,OAAO,EAAKX,MAAMC,MAAMW,KAAI,SAACjB,GAAD,OAAU,cAAC,EAAD,CAAMA,KAAMA,Q,4CAGpD,WACA,OACE,sBAAKkB,UAAU,MAAf,UACE,uCACCpB,KAAKkB,qB,GAvBMb,cCQHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5366cf5.chunk.js","sourcesContent":["import { Component } from 'react'\n\nclass Blog extends Component {\n  render() {\n  return (\n    <div>\n      <h1>Blog</h1>\n      <h3>{JSON.stringify(this.props.blog)}</h3>\n      <h3>{this.props.blog.id}</h3>\n      <h3>{this.props.blog.post}</h3>\n    </div>\n  );\n  }\n}\n\nexport default Blog;","import { Component } from 'react'\nimport Blog from './components/Blog'\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    blogs: []\n  }\n\n  componentDidMount = async () => {\n    let response = await fetch(\"https://bcp-django-react.herokuapp.com/api/blogposts/\")\n    let JSONresp = await response.json()\n    console.log(JSONresp)\n    this.setState({\n      blogs: JSONresp\n    })\n  }\n\n  createBlogs = () => {\n    return this.state.blogs.map((blog) => <Blog blog={blog}/>)\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Blogs</h1>\n      {this.createBlogs()}\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}